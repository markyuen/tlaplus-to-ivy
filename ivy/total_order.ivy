#lang ivy1.7

module total_order(carrier) = {
    relation le(X:carrier, Y:carrier)  # Less than or equal
    axiom [reflexive] le(X, X)
    axiom [transitive] (le(X, Y) & le(Y, Z)) -> le(X, Z)
    axiom [anti_symmetric] (le(X, Y) & le(Y, X)) -> X = Y
    axiom [total] le(X, Y) | le(Y, X)

    relation lt(X:carrier, Y:carrier)  # Less than
    axiom [less_than] lt(X, Y) <-> (le(X, Y) & X ~= Y)

    relation successive(X:carrier, Y:carrier)  # X + 1 = Y
    definition [successive_def]
        successive(X, Y) = lt(X, Y) & (forall Z. lt(X, Z) -> le(Y, Z))
    
    individual zero : carrier
    axiom [val_zero] le(zero, X)

    action succ(x:carrier) returns (y:carrier) = {
        assume successive(x, y);
    }
}
